* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

ul {
    list-style: none;
}

body {
    background-image: url(./img/Fundo.jpg) ;
    background-position: top center;
    background-size: 100% auto;
    background-repeat: no-repeat;
    background-color: #121214;
    
}
body * {
    font-family: 'inter', sans-serif;
    line-height: 160%;
}



header {
    margin-top: 32px; /* Nesse caso o padding top funcionaria da mesma forma */
    /*text-align: center;*/
}
/* Antes 
usando o text-align:center no header para centralizar

header img {
    
    width: 120px;
    border-radius: 50%;
}
*/

header div {
    width: 120px;
    margin: auto; /* centralizou a div */
    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
    border-radius: 100%;
    display: flex; /* consegue centralizar a imagem dentro da div*/
    padding: 4px;

    transition: transform 0.3s;
    /*1 arg qual é o nome da transição, 2 arg tempo que vai durar a transição*/

    animation: fromTop .5s .3s backwards; 
}

header div:hover {
    transform: scale(1.1);
}

header img {
    width: 100%; /* imagem diminuiu de taman*/
    border-radius: 50%;
}

/*
main * {
    border: 1px solid red;
}
*/

main {
    max-width: 600px;
    width: 90%;
    margin: 32px auto; 
    /*Com dois valores significa o primeiro serve para cima e para baixo o segundo para os lados, nesse caso automatico*/
    display:grid;
    gap:24px
    /* --- faz o mesmo que o cara de cima referente ao gap,
    no entanto quando usei o wrap, pode ver em "ul" teve uma diferença
    
    display: flex;
    flex-direction:column; /*pelo que entendi muda o comportamento do display flex para coluna 
    gap: 24px;
    */
}

section {
    color: white;
    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
    border-radius: 10px;
    padding-top: 3px;

    animation: fromBottom .7s backwards;
}

section div {
    width: 100%;
    background-color: #2a2634;
    padding: 32px;
    padding-top: 24px; /*preenchimento interno em relação ao topo */
    border-radius: 6px;
    
    /*border-top: 4px solid aqua;*/
    /*
    border-top: 4px;
    border-top-style: solid;
    border-top-color: aqua;
    */

    
}

section h2 {

    font-weight: 900; /*Por acaso não faz tanta diferença com esses valores */
    font-size: 24px; /*Por acaso não faz tanta diferença com esses valores */
    letter-spacing: 0.47px; 
}

section p {
    font-weight: 400; /*Por acaso não faz tanta diferença com esses valores */
    font-size: 16px; /*Por acaso não faz tanta diferença com esses valores */
    letter-spacing: -0.18px;
    color: #a1a1a1;
}

section ul {
    display: flex;
    flex-wrap: wrap;
    gap: 16px; /* espaço entre os ítens da lista, funciona em inline ou flex, pelo que entendi; */ 
    margin-top: 24px;
}
/*o flex coloca o que ta dentro do container (html) ul em inline, um do lado do outro

*/
section ul li {
    transition: transform 0.3s;
}
section ul li:hover {
    transform:scale(1.1);
}



.filmes-list img {
    width: 120px; /*Largura da imagem, a altura segue automaticamente*/
    border-radius: 8px;

}

.personalidades-list img {
    width: 70px;
    border-radius: 50%;
    border: 3px solid #443e54
}

/* A propriedade abaixo especifíca que eu quero a primeira section de main, de acordo com o parâmetro passado*/
main section:nth-child(1) {
    animation-delay: 0.5s; /*delay para iniciar a animação*/
}
main section:nth-child(2) {
    animation-delay: .8s;    
}
main section:nth-child(3) {
    animation-delay: 1.1s;    
}
/*Animações*/

/*
animation nomeDaAnimação duraçãoDaAnimação tempoParaComeçar backwards {começa com 
    o que no from da animaçao ou 0%, na dúvida tira e vai entender}
*/

@keyframes fromTop {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0px);
        
    }
}

@keyframes fromBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }
    100% {
        opacity: 1;
        transform: translateY(0px);
        
    }
}







